/* This file is generated by glib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
#ifndef __PSPPIRE_MARSHAL_MARSHAL_H__
#define __PSPPIRE_MARSHAL_MARSHAL_H__

#include <glib-object.h>

G_BEGIN_DECLS

/* BOOLEAN:INT,INT (src/ui/gui/marshaller-list:3) */
extern
void psppire_marshal_BOOLEAN__INT_INT (GClosure     *closure,
                                       GValue       *return_value,
                                       guint         n_param_values,
                                       const GValue *param_values,
                                       gpointer      invocation_hint,
                                       gpointer      marshal_data);

/* VOID:POINTER,INT,INT (src/ui/gui/marshaller-list:4) */
extern
void psppire_marshal_VOID__POINTER_INT_INT (GClosure     *closure,
                                            GValue       *return_value,
                                            guint         n_param_values,
                                            const GValue *param_values,
                                            gpointer      invocation_hint,
                                            gpointer      marshal_data);

/* VOID:INT,UINT,POINTER (src/ui/gui/marshaller-list:5) */
extern
void psppire_marshal_VOID__INT_UINT_POINTER (GClosure     *closure,
                                             GValue       *return_value,
                                             guint         n_param_values,
                                             const GValue *param_values,
                                             gpointer      invocation_hint,
                                             gpointer      marshal_data);

/* VOID:UINT,UINT,UINT (src/ui/gui/marshaller-list:6) */
extern
void psppire_marshal_VOID__UINT_UINT_UINT (GClosure     *closure,
                                           GValue       *return_value,
                                           guint         n_param_values,
                                           const GValue *param_values,
                                           gpointer      invocation_hint,
                                           gpointer      marshal_data);

/* VOID:INT,INT (src/ui/gui/marshaller-list:7) */
extern
void psppire_marshal_VOID__INT_INT (GClosure     *closure,
                                    GValue       *return_value,
                                    guint         n_param_values,
                                    const GValue *param_values,
                                    gpointer      invocation_hint,
                                    gpointer      marshal_data);

/* VOID:INT,UINT (src/ui/gui/marshaller-list:8) */
extern
void psppire_marshal_VOID__INT_UINT (GClosure     *closure,
                                     GValue       *return_value,
                                     guint         n_param_values,
                                     const GValue *param_values,
                                     gpointer      invocation_hint,
                                     gpointer      marshal_data);


G_END_DECLS

#endif /* __PSPPIRE_MARSHAL_MARSHAL_H__ */
